package edu.udacity.java.nano;


import edu.udacity.java.nano.controller.WebSocketChatServer;
import static org.assertj.core.api.Assertions.assertThat;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.socket.WebSocketSession;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when


public class WebSocketChatServerTest {


    @Test
    public void verifyCallToIsOpenConnection() {
        WebSocketSession session = mock(WebSocketSession.class);


        when(session.isOpen()).thenReturn(true);

        WebSocketChatServer controller = new WebSocketChatServer();



        // Now you can verify if session.sendMessage() was called or not
        verify(session, times(1)).sendMessage(textMsg);
    }

    /*
        @Test
        public void loginTest() throws Exception{
            MockHttpSession session = new MockHttpSession();

            session.setAttribute("username","deretou");

            MockHttpServletRequestBuilder builder = MockMvcRequestBuilders.get("/index")
                    .session(session);
            this.mockMvc.perform(builder)
                    .andExpect(MockMvcResultMatchers.status()
                            .isOk());

        }*/

        protected URI getUrl(String path) throws URISyntaxException {
            return new URI("ws://localhost:" + this.port + path);
        }



}